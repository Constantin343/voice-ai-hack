'use client'
import { motion } from 'framer-motion'
import { useEffect, useState } from 'react'


interface AnimatedLogoProps {
    isSpeaking: boolean
}

const AnimatedLogo: React.FC<AnimatedLogoProps> = ({ isSpeaking }) => {
  const [currentAnimation, setCurrentAnimation] = useState<'static' | 'animate' | 'loop'>('static')


  const variants = {
    static: {
      d: "M646.5,162.5C773.278,157.843 880.444,200.843 968,291.5C1041.05,375.71 1073.05,473.71 1064,585.5C1058.36,642.076 1038.36,692.743 1004,737.5C955.628,794.176 895.128,813.343 822.5,795C794.495,787.332 766.495,779.666 738.5,772C673.007,758.494 627.173,782.327 601,843.5C591.844,869.079 588.511,895.412 591,922.5C593.386,942.203 596.053,961.869 599,981.5C600.466,994.469 600.799,1007.47 600,1020.5C594.162,1053.85 574.328,1069.01 540.5,1066C524.12,1063.88 509.12,1058.21 495.5,1049C475.549,1035.06 457.382,1018.89 441,1000.5C385,935.167 329,869.833 273,804.5C246.069,773.966 222.069,741.299 201,706.5C145.576,608.242 139.909,507.242 184,403.5C220.058,330.776 274.224,275.942 346.5,239C425.156,200.25 508.156,176.25 595.5,167C612.625,165.159 629.625,163.659 646.5,162.5Z",
    },
    animate: {
      d: "M698.5,162.5C825.278,157.843 860.444,165.843 948,256.5C1021.05,340.71 1088.05,436.71 1079,548.5C1073.36,605.076 1098.36,664.743 1064,709.5C1015.63,766.176 1046.13,757.343 997.5,802C972.495,824.963 947.495,875.666 906.5,902C897.047,908.072 858.255,946.327 827,973.5C806.497,991.325 779.807,989.701 747,1007.5C710.386,1027.37 715.053,1024.15 676,1035.5C651.211,1042.7 626.799,1049.27 601,1048.5C580.386,1047.88 563.328,1046.6 535.5,1043C519.12,1040.88 482.12,1028.21 452.5,1022C407.549,1012.58 349.382,995.89 333,977.5C277,912.167 277,901.833 221,836.5C194.069,805.966 205.069,748.299 203,692.5C197.688,549.242 132.909,500.242 177,396.5C213.058,323.776 237.224,284.942 309.5,248C388.156,209.25 422.156,173.25 509.5,164C526.625,162.159 681.625,163.659 698.5,162.5Z",
      transition: {
        duration: 0.7,
        ease: "easeInOut",
      }
    },
    loop: {
      d: [
        "M698.5,162.5C825.278,157.843 860.444,165.843 948,256.5C1021.05,340.71 1088.05,436.71 1079,548.5C1073.36,605.076 1098.36,664.743 1064,709.5C1015.63,766.176 1046.13,757.343 997.5,802C972.495,824.963 947.495,875.666 906.5,902C897.047,908.072 858.255,946.327 827,973.5C806.497,991.325 779.807,989.701 747,1007.5C710.386,1027.37 715.053,1024.15 676,1035.5C651.211,1042.7 626.799,1049.27 601,1048.5C580.386,1047.88 563.328,1046.6 535.5,1043C519.12,1040.88 482.12,1028.21 452.5,1022C407.549,1012.58 349.382,995.89 333,977.5C277,912.167 277,901.833 221,836.5C194.069,805.966 205.069,748.299 203,692.5C197.688,549.242 132.909,500.242 177,396.5C213.058,323.776 237.224,284.942 309.5,248C388.156,209.25 422.156,173.25 509.5,164C526.625,162.159 681.625,163.659 698.5,162.5Z",
        "M687.5,195.5C814.278,190.843 830.444,183.843 918,274.5C991.05,358.71 1070.05,373.71 1061,485.5C1055.36,542.076 1066.36,662.743 1032,707.5C983.628,764.176 967.992,775.357 945.5,824C934.731,847.289 959.896,902.449 901.5,946C866.948,971.768 860.255,959.327 805,980.5C779.63,990.221 751.807,986.701 719,1004.5C682.386,1024.37 688.053,1048.15 649,1059.5C624.211,1066.7 582.799,1073.27 557,1072.5C536.386,1071.88 519.328,1070.6 491.5,1067C475.12,1064.88 438.12,1052.21 408.5,1046C363.549,1036.58 349.382,995.89 333,977.5C277,912.167 277,901.833 221,836.5C194.069,805.966 173.069,751.299 171,695.5C165.688,552.242 148.909,522.242 193,418.5C229.058,345.776 181.224,287.942 253.5,251C332.156,212.25 373.156,196.25 460.5,187C477.625,185.159 670.625,196.659 687.5,195.5Z",
        "M687.5,195.5C814.278,190.843 863.444,168.843 951,259.5C1024.05,343.71 1070.05,373.71 1061,485.5C1055.36,542.076 1073.63,610.743 1058,706.5C1046.63,776.176 1035.99,822.357 1013.5,871C1002.73,894.289 1008.9,920.449 950.5,964C915.948,989.768 909.255,977.327 854,998.5C828.63,1008.22 803.938,1012.42 768,1022.5C736.386,1031.37 701.053,1008.15 662,1019.5C637.211,1026.7 595.799,1033.27 570,1032.5C549.386,1031.88 532.328,1030.6 504.5,1027C488.12,1024.88 451.12,1012.21 421.5,1006C376.549,996.576 349.382,995.89 333,977.5C277,912.167 277,901.833 221,836.5C194.069,805.966 151.069,744.299 149,688.5C143.688,545.242 148.909,522.242 193,418.5C229.058,345.776 209.782,364.942 253.5,251C292.156,150.25 368.156,167.25 467.5,174C640.625,200.159 670.625,196.659 687.5,195.5Z",
        "M678.5,163.5C805.278,158.843 888.444,135.843 976,226.5C1049.05,310.71 1070.05,373.71 1061,485.5C1055.36,542.076 1098.63,610.743 1083,706.5C1071.63,776.176 1035.99,822.357 1013.5,871C1002.73,894.289 1008.9,920.449 950.5,964C915.948,989.768 909.255,977.327 854,998.5C828.63,1008.22 804.636,1015.37 768,1022.5C681.386,1039.37 663.491,1018.15 624.438,1029.5C599.649,1036.7 554.799,1059.27 529,1058.5C508.386,1057.88 491.328,1056.6 463.5,1053C447.12,1050.88 410.12,1038.21 380.5,1032C335.549,1022.58 308.382,1021.89 292,1003.5C236,938.167 277,901.833 221,836.5C194.069,805.966 151.069,744.299 149,688.5C143.688,545.242 97.909,557.242 142,453.5C178.058,380.776 133.839,274.984 253.5,251C297.156,242.25 347.023,209.982 430.5,179C574.625,125.509 661.625,164.659 678.5,163.5Z"
      ],
      transition: {
        duration: 4,
        ease: "easeInOut",
        repeat: Infinity,
        repeatType: "mirror",
        type: "tween",
        morphPrecision: 100,
        delay: 0.2
      }
    }
  }

   // Update animation state when isSpeaking changes
   useEffect(() => {
    if (isSpeaking) {
      setCurrentAnimation('animate')
    } else {
      setCurrentAnimation('static')
    }
  }, [isSpeaking])

  return (
    <motion.svg
      width="400"
      height="400"
      viewBox="0 0 1200 1200"
      onClick={() => {
        if (currentAnimation === 'static') {
          setCurrentAnimation('animate')
        } else {
          setCurrentAnimation('static')
        }
      }}
    >
      <motion.path
        fill="currentColor"
        initial="static"
        animate={currentAnimation}
        variants={variants}
        onAnimationComplete={() => {
          if (currentAnimation === 'animate') {
            setCurrentAnimation('loop')
          }
        }}
      />
    </motion.svg>
  )
}

export default AnimatedLogo


